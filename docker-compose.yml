version: '3.9'

services:

  dashboard-main:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-dashboard-main:latest
    ports: [ "3001:80" ]

  dashboard-admin:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-dashboard-admin:latest
    ports: [ "3002:80" ]

  api-system:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-backend:latest
    command: "api system"
    ports: [ "8081:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  api-dashboard-main:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-backend:latest
    command: "api dashboard-main"
    ports: [ "8082:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  api-dashboard-admin:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-backend:latest
    command: "api dashboard-admin"
    ports: [ "8083:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  daemon-metrics-extractor:
    restart: "on-failure"
    image: docker.io/goforbroke1006/onix-backend:latest
    command: "daemon metrics-extractor"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  postgres:
    restart: "on-failure"
    image: postgres:10.0
    environment:
      POSTGRES_DB: "onix"
      POSTGRES_USER: "onix"
      POSTGRES_PASSWORD: "onix"
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    restart: "on-failure"
    image: amacneil/dbmate:v1.12
    command: "-d /migrations up"
    environment:
      DATABASE_URL: postgres://onix:onix@postgres:5432/onix?sslmode=disable
    volumes:
      - ./db/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  fixture-common:
    restart: "on-failure"
    image: amacneil/dbmate:v1.12
    command: "-d /fixtures up"
    environment:
      DATABASE_URL: postgres://onix:onix@postgres:5432/onix?sslmode=disable
    volumes:
      - ./db/fixtures:/fixtures
    depends_on:
      postgres:
        condition: service_healthy

  stub-prometheus:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "stub prometheus"
    ports: [ "19091:19090" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

volumes:
  postgresql-data: ~