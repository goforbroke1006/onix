version: '3.9'

services:
  frontend-dashboard-main-prod-builder:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/frontend-prod-builder/Dockerfile
      context: ./
    volumes:
      - ./frontend/dashboard-main/:/code/
    environment:
      REACT_APP_API_DASHBOARD_MAIN_BASE_ADDR: http://localhost:8082/api/dashboard-main

  frontend-dashboard-main-prod:
    restart: "always"
    image: nginx:1.21.6-alpine
    volumes:
      - ./frontend/dashboard-main/build:/usr/share/nginx/html
    ports:
      - "3001:80"

  frontend-dashboard-admin-prod-builder:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/frontend-prod-builder/Dockerfile
      context: ./
    volumes:
      - ./frontend/dashboard-admin/:/code/
    environment:
      REACT_APP_API_DASHBOARD_ADMIN_BASE_ADDR: http://localhost:8083/api/dashboard-admin

  frontend-dashboard-admin-prod:
    restart: "always"
    image: nginx:1.21.6-alpine
    volumes:
      - ./frontend/dashboard-admin/build:/usr/share/nginx/html
    ports:
      - "3002:80"

  api-system:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "api system"
    ports: [ "8081:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  api-dashboard-main:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "api dashboard-main"
    ports: [ "8082:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  api-dashboard-admin:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "api dashboard-admin"
    ports: [ "8083:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  daemon-metrics-extractor:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "daemon metrics-extractor"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  postgres:
    restart: "on-failure"
    image: postgres:10.0
    environment:
      POSTGRES_DB: "onix"
      POSTGRES_USER: "onix"
      POSTGRES_PASSWORD: "onix"
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    restart: "on-failure"
    image: amacneil/dbmate:v1.12
    command: "-d /migrations up"
    environment:
      DATABASE_URL: postgres://onix:onix@postgres:5432/onix?sslmode=disable
    volumes:
      - ./db/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  fixture-common:
    restart: 'on-failure'
    image: amacneil/dbmate:v1.12
    command: '-d /fixtures up'
    environment:
      DATABASE_URL: postgres://onix:onix@postgres:5432/onix?sslmode=disable
    volumes:
      - ./db/fixtures:/fixtures
    depends_on:
      postgres:
        condition: service_healthy

  stub-prometheus:
    restart: "on-failure"
    build:
      dockerfile: .docker-compose/golang-runner/Dockerfile
      context: ./
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "stub prometheus"
    ports: [ "19091:19090" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  fixture-foo-backend-measurement:
    restart: "on-failure"
    image: golang:1.16-alpine
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "go run main.go util load-historical-metrics --service=foo/backend --from=2020-10-25 --till=2021-02-26 --source=1"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres, stub-prometheus ]

  fixture-bar-backend-measurement:
    restart: "on-failure"
    image: golang:1.16-alpine
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "go run main.go util load-historical-metrics --service=bar/backend --from=2021-09-30 --till=2022-04-10 --source=1"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres, stub-prometheus ]

  fixture-acme-backend-measurement:
    restart: "on-failure"
    image: golang:1.16-alpine
    volumes:
      - ./:/go/src/github.com/goforbroke1006/onix
    working_dir: /go/src/github.com/goforbroke1006/onix
    command: "go run main.go util load-historical-metrics --service=acme/backend --from=2021-12-12 --till=2022-04-10 --source=1"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres, stub-prometheus ]

volumes:
  postgresql-data: ~