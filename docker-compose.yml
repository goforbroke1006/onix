version: '3.9'

services:

  frontend:
    restart: "on-failure"
    image: local-env/onix-frontend:dev
    ports: [ "3002:80" ]
    environment:
      REACT_APP_API_DASHBOARD_ADMIN_BASE_ADDR: http://localhost:8083/api/dashboard-admin

  api-external:
    restart: "on-failure"
    image: local-env/onix-backend:dev
    command: "api system"
    ports: [ "8081:8080" ]
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  daemon-metrics-extractor:
    restart: "on-failure"
    image: local-env/onix-backend:dev
    command: "daemon metrics-extractor"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  postgres:
    restart: "on-failure"
    image: postgres:10.0
    environment:
      POSTGRES_DB: "onix"
      POSTGRES_USER: "onix"
      POSTGRES_PASSWORD: "onix"
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  util-migrate:
    restart: "on-failure"
    image: local-env/onix-backend:dev
    command: "util migrate"
    environment: { DB_HOST: postgres }
    depends_on: [ postgres ]

  fixture-common:
    restart: "on-failure"
    image: amacneil/dbmate:v1.12
    command: "-d /fixtures up"
    environment:
      DATABASE_URL: postgres://onix:onix@postgres:5432/onix?sslmode=disable
    volumes:
      - ./db/fixtures:/fixtures
    depends_on:
      postgres:
        condition: service_healthy

  stub-prometheus:
    restart: "on-failure"
    image: local-env/onix-backend:dev
    ports: [ "19091:19090" ]
    command: "stub prometheus"
    volumes:
      - ./:/code/

volumes:
  postgresql-data: ~