openapi: 3.0.3
info:
  title: Main Dashboard
  description: Main Dashboard
  version: 1.0.0
servers:
  - url: 'http//localhost:8082/api/main-dashboard'
    description: Docker-compose hosted API
paths:
  /healthz:
    get:
      responses:
        200:
          description: health check for docker-compose
          content:
            application/json:
              schema:
                type: string
  /service:
    get:
      responses:
        200:
          description: returns services list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/service'
  /source:
    get:
      responses:
        200:
          description: returns sources list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/source'
  /release:
    get:
      parameters:
        - in: query
          name: service
          description: service name
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: returns releases for specified service
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release'
  /compare:
    get:
      parameters:
        - { in: query, name: service,               required: true, schema: { type: string, minLength: 1 } }
        - { in: query, name: release_one_title,     required: true, schema: { type: string, minLength: 1 } }
        - { in: query, name: release_one_start,     required: true, schema: { type: integer, format: int64 } }
        - { in: query, name: release_one_source_id, required: true, schema: { type: integer, format: int64 } }
        - { in: query, name: release_two_title,     required: true, schema: { type: string, minLength: 1 } }
        - { in: query, name: release_two_start,     required: true, schema: { type: integer, format: int64 } }
        - { in: query, name: release_two_source_id, required: true, schema: { type: integer, format: int64 } }
        - { in: query, name: period,                required: true, schema: { type: string, enum: [ 15m, 1h, 6h, 1d ] } }
      responses:
        200:
          description: return measurement pairs for two releases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompareResponse'

components:
  schemas:
    CompareResponse:
      type: object
      required: [ service, release_one, release_two, reports ]
      properties:
        service:
          type: string
        release_one:
          type: string
        release_two:
          type: string
        reports:
          type: array
          items:
            $ref: '#/components/schemas/criteriaReport'
    service:
      required: [ title ]
      properties:
        title:
          type: string
    source:
      required: [ id, title, kind, address ]
      properties:
        id:
          type: integer
          format: "int64"
        title:
          type: string
        kind:
          type: string
          enum:
            - prometheus
            - influxdb
        address:
          type: string
    release:
      required: [ id, title, from, till, criteria ]
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        from:
          type: integer
          format: int64
        till:
          type: integer
          format: int64
    criteriaReport:
      required: [ title, selector, graph ]
      properties:
        title:
          type: string
        selector:
          type: string
        graph:
          type: array
          items:
            $ref: '#/components/schemas/graphItem'

    graphItem:
      required: [ t1, v1, t2, v2 ]
      properties:
        t1:
          type: string
        v1:
          type: number
          format: "double"
        t2:
          type: string
        v2:
          type: number
          format: "double"